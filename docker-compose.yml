services:
  postgres_db:
    image: postgres:17
    volumes:
      - postgres_data_crew_forge_pg17:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - crew_forge_network

  jaeger-server:
    image: jaegertracing/jaeger:latest
    ports:
      - "16686:16686"
    environment:
      - LOG_LEVEL=debug
    networks:
      - crew_forge_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      otel-collector:
        condition: service_started
    networks:
      - crew_forge_network
    restart: unless-stopped

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./observability/otel-collector-config.yaml:/etc/otelcol-contrib/config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"
      - "9464:9464"
    networks:
      - crew_forge_network
    depends_on:
      - jaeger-server
    restart: unless-stopped

  crewforge-api:
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
      otel-collector:
        condition: service_started
    env_file:
      - .env
    restart: unless-stopped
    working_dir: /app
    networks:
      - crew_forge_network

volumes:
  postgres_data_crew_forge_pg17:

networks:
  crew_forge_network:
    driver: bridge
